// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model University {
    id          Int     @id @default(autoincrement())
    name        String
    location    String
    description String?
    numStudents Int
    picture     String?
    admins      User[]  @relation("Admin")
    adminId     Int?
    rsos        RSO[]
}

model User {
    id           Int        @id @default(autoincrement())
    firstName    String
    lastName     String
    email        String     @unique
    password     String
    role         Role       @default(USER)
    university   University @relation("Admin", fields: [universityId], references: [id])
    universityId Int
    rsos         RSO[]      @relation("Member")
    admin        RSO[]      @relation("Admin")
    events       Event[]    @relation("Attendee")
    hostEvents   Event[]    @relation("Host")
    comments     Comment[]  @relation("Commenter")
    eventId      Int?
}

enum Role {
    SUPERADMIN
    ADMIN
    USER
}

model RSO {
    id           Int        @id @default(autoincrement())
    name         String
    admin        User       @relation("Admin", fields: [userId], references: [id])
    adminId      Int
    members      User[]     @relation("Member")
    university   University @relation(fields: [universityId], references: [id])
    universityId Int
    userId       Int
    events       Event[]
}

model Event {
    id           Int       @id @default(autoincrement())
    name         String
    category     String
    description  String?
    time         DateTime
    date         DateTime
    location     Location?
    contactPhone String?
    contactEmail String?
    type         EventType @default(RSO)
    rso          RSO?      @relation(fields: [rsoId], references: [id])
    rsoId        Int?
    attendees    User[]    @relation("Attendee")
    host         User      @relation("Host", fields: [hostId], references: [id])
    hostId       Int
    comments     Comment[]
    locationId   Int
}

model Location {
    id        Int    @id @default(autoincrement())
    name      String
    latitude  Float
    longitude Float
    event     Event  @relation(fields: [eventId], references: [id])
    eventId   Int    @unique
}

enum EventType {
    PUBLIC
    PRIVATE
    RSO
}

model Comment {
    id       Int    @id @default(autoincrement())
    text     String
    author   User   @relation("Commenter", fields: [authorId], references: [id])
    authorId Int
    eventId  Int
    event    Event  @relation(fields: [eventId], references: [id])
    rating   Int
}
